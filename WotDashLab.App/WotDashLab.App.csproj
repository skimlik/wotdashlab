<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>45ae385d-b692-4f53-bd14-32bff248f3d2</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <RootNamespace>WotDashLab.WebApi</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FluentValidation.AspNetCore" Version="10.2.2" />
    <PackageReference Include="Mapster" Version="7.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.9" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.1.4" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.1.4" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.1.4" />
  </ItemGroup>

<!--  <ItemGroup>-->
<!--    &lt;!&ndash; Don't publish the SPA source files, but do show them in the project files list &ndash;&gt;-->
<!--    <Content Remove="$(SpaRoot)**" />-->
<!--    <None Remove="$(SpaRoot)**" />-->
<!--    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />-->
<!--  </ItemGroup>-->

  <ItemGroup>
    <ProjectReference Include="..\WotDashLab.Abstractions\WotDashLab.Abstractions.csproj" />
    <ProjectReference Include="..\WotDashLab.Services\WotDashLab.Services.csproj" />
    <ProjectReference Include="..\WotDashLab.WebApi.Contracts\WotDashLab.WebApi.Contracts.csproj" />
    <ProjectReference Include="..\WotDashLab.Wot.Client.Contracts\WotDashLab.Wot.Client.Contracts.csproj" />
    <ProjectReference Include="..\WotDashLab.Wot.Client\WotDashLab.Wot.Client.csproj" />
  </ItemGroup>

<!--  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">-->
<!--    &lt;!&ndash; Ensure Node.js is installed &ndash;&gt;-->
<!--    <Exec Command="node &#45;&#45;version" ContinueOnError="true">-->
<!--      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />-->
<!--    </Exec>-->
<!--    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />-->
<!--    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--  </Target>-->

<!--  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
<!--    &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build &#45;&#45; &#45;&#45;prod" />-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr &#45;&#45; &#45;&#45;prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />-->

<!--    &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;-->
<!--    <ItemGroup>-->
<!--      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />-->
<!--      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />-->
<!--      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
<!--        <RelativePath>%(DistFiles.Identity)</RelativePath>-->
<!--        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
<!--        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
<!--      </ResolvedFileToPublish>-->
<!--    </ItemGroup>-->
<!--  </Target>-->

</Project>
